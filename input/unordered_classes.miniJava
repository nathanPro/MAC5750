class Factorial {
    public static void main(String[] a) {
        System.out.println(new Fac().Compute(10));
    }
}
class Fac {
    IntegerWrapper input;
    public int Compute(int num) {
        int tmp;
        tmp = input.set(num);
        return this.ComputeFac(input.get());
    }
    public int ComputeFac(int num) {
        int num_aux;
        if (num < 1)
            num_aux = 1;
        else num_aux = num * (this.ComputeFac(num - 1));
        return num_aux;
    }
}
class IntegerWrapper {
    int inner;
    public int set(int x) {
        inner = x;
        return inner;
    }
    public int get() {
        return inner;
    }
}
class A extends B {
    int t4;
    public int calculateA() {
        return this.calculate();
    }
}
class B extends C {
    int t3;
    public int calculateB() {
        return this.calculate();
    }
}
class E extends D {
    public int calculate() {
        return 2;
    }
}
class D extends C {}
class C {
    int t1;
    int t2;
    public int calculate() {
        int not_aux;
        int num_aux;
        return 1;
    }
}
